[{"categories":["Java"],"contents":"Hibernate 本質上是透過Java物件來操作SQL Table，因此在Java程式裡會有一個Entity類別(Pojo、Value Object)來對應一個SQL Table。\nHibernate Annotation 透過在Entity類別裡加入Hibernate註解來告訴Hibernate該屬性對應的SQL Column。 Entity類別必須是public。 Entity類別裡一定要有預設建構子或無引數 (Argument)建構子。\n不可以是final類別，不可以有final方法。 資料成員不可以是public。 沒有finalize方法。\n在使用Hibernate時，應該import JPA套件，這是Hibernate Team的建議。 @Entity:宣告該類別為一個Entity類別。 @Table：可帶入value屬性，告訴Hibernate其對應的table名稱。 @Id：告訴Hibernate該屬性對應Table的PK。 @Column：可帶入name屬性，告訴Hibernate其對應的column名稱。 @GeneratedValue:可帶入strategy屬性，告訴Hibernate該如何產生值。\n   strategy屬性的可選值 描述     GenerationType.AUTO 讓Hibernate自動針對資料庫挑選合適的策略   GenerationType.IDENTITY 指派PK使用資料庫的identity column   GenerationType.SEQUENCE 指派PK使用資料庫的序列   GenerationType.TABLE 指派PK使用底層資料庫TABLE來確保其獨特性    你可以實作自己的Gentation Strategy 透過實作org.hibernate.id.IdentifierGenerator，Override generate(\u0026hellip;)。\nSessionFactory: 讀取Hibernate的設定檔(Config)、製造Session物件，由於本身是一個重量級(Heavy-Weight)物件，因此整個應用程式應該只能有一個。\nSession：用來包裹JDBC對於資料庫的連線，主要是用來儲存、載入物件的物件，生命週期短，從SessionFactory回收。\nAdvanced Mapping Entity Lifecycle One to One 舉例：講師 \u0026mdash;\u0026gt; 講師詳細資料 @OneToOne：可帶入cascade屬性，告訴Hibernate如何Cascade。 @JoinColumn：帶入name屬性，合法值為另一方類別在sql中的fk或pk欄位名稱。如果要實現雙向O2O，在另外一個class也要加上相對應的field、O2O和JoinColumn註解。 要新增被關聯表格的field，並將註解加在上方。\nCascadeType\nOne to Many 舉例： 講師 \u0026mdash;\u0026gt; 課程 在O2M中，要在多方裡新增一方的field，並加註@ManyToOne、@JoinColumn。 @ManyToOne：可帶入cascade屬性，告訴Hibernate如何Cascade。 @JoinColumn：帶入name屬性，合法值為另一方類別在sql中的fk或pk欄位名稱。 在O2M中，要在一方類別裡新增多方的集合(List)field，並加註@OneToMany。 @OneToMany：帶入mappedBy屬性，屬性合法值請帶入在多方類別中，一方field的名稱。\nFetchType FetchType可以在@ManyToOne、@OneToMany、@OneToOne\u0026hellip;\u0026hellip;等註解中帶入fetch屬性，來指定fetch的方式。\nLazy Loading 會先載入主要的Entity，有需求時才會載入其他的dependent Entites\nEager Loading 直接載入所有dependent Entites\nDefault FetchType 解決LazyLoading的問題 在session關閉前讀取資料\n使用 HQL語法的 JOIN FETCH\n","permalink":"https://akechetaki10736.github.io/blog/post-13/","tags":["Java"],"title":"Hibernate學習筆記"}]